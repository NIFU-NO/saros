% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_cat_png.R
\name{embed_cat_plot_pdf}
\alias{embed_cat_plot_pdf}
\title{Embed Interactive Categorical Plot}
\usage{
embed_cat_plot_pdf(
  data,
  ...,
  cols = tidyselect::everything(),
  by = NULL,
  showNA = c("ifany", "always", "never"),
  label_font_size = 8,
  main_font_size = 9,
  font_family = "Calibri",
  colour_palette = NULL,
  colour_na = "gray90",
  colour_2nd_binary_cat = "#ffffff",
  height_per_col = 0.3,
  height_fixed = 1,
  data_label = c("proportion", "percentage", "percentage_bare", "count", "mean",
    "median"),
  digits = if (data_label == "proportion") 2 else 1,
  sort_by = NULL,
  vertical = FALSE,
  descend = FALSE,
  ignore_if_below = 0,
  label_separator = NULL,
  x_axis_label_width = 20,
  seed = 1,
  return_raw = TRUE,
  call = rlang::caller_env()
)
}
\arguments{
\item{data}{Data frame or tibble.}

\item{...}{Optional parameters forwarded from above.}

\item{cols}{Columns to select for reporting. Supports \code{\link[dplyr:dplyr_tidy_select]{tidy-select}}.}

\item{by}{\code{\link[dplyr:dplyr_data_masking]{data-masking}}\cr. Optional column used to break output by.}

\item{showNA}{[\code{logical(1)}]\cr Whether to show NA in categorical variables (one of c("ifany", "always", "never"), like in table()).}

\item{label_font_size}{[\code{integer(1)}]\cr Font size for data labels}

\item{main_font_size}{[\code{integer(1)}]\cr Font size for all other text
Must contain at least the number of unique values (excl. missing) in the data set.}

\item{font_family}{Word font family. See officer::fp_text}

\item{colour_palette}{[\code{character()}]\cr
Must contain at least the number of unique values (incl. missing) in the data set.}

\item{colour_na}{[\code{character(1)}]\cr Colour as a single string.}

\item{colour_2nd_binary_cat}{[\code{character(1)}]\cr Colour for second category in binary variables. Often useful to hide this.}

\item{height_per_col}{[\code{numeric(1)>0}]\cr Height in cm per chart entry.}

\item{height_fixed}{[\code{numeric(1)>0}]\cr Fixed height in cm.}

\item{data_label}{[\code{character(1)}] What to display, one of "proportion", "percentage", "percentage_bare" (which is without the percentage symbol), "count", "mean", or "median". Defaults to "proportion".}

\item{digits}{[\code{integer(1)}]\cr Number of decimal places as integer.}

\item{sort_by}{[\code{character(1)}] Sort output (and collapse if requested). Defaults to none (NULL).
\itemize{
\item{".top"}{The proportion for the highest category available in the variable.}
\item{".upper"}{The sum of the proportions for the categories above the middle category.}
\item{".mid_upper"}{The sum of the proportions for the categories including and above the middle category.}
\item{".mid_lower"}{The sum of the proportions for the categories including and below the middle category.}
\item{".lower"}{The sum of the proportions for the categories below the middle category.}
\item{".bottom"}{The proportions for the lowest category available in the variable.}
\item{".variable_label"}{Sort by the variable labels.}
\item{".id"}{Sort by the variable names.}
\item{".by_group"}{The groups of the by argument.}
\item{[\code{character(1)}]}{Character vector of category labels to sum together.}
}}

\item{vertical}{[\code{logical(1)}] Logical. If FALSE (default), then horizontal.}

\item{descend}{[\code{logical(1)}]\cr Reverse sorting of sort_by. Defaults to ascending order (FALSE).}

\item{ignore_if_below}{[\code{numeric(1)}] Whether to hide label if below this value.}

\item{label_separator}{[\code{character(1)}]\cr Split pattern.}

\item{x_axis_label_width}{[\code{integer(1)}] Width of the labels used for the categorical column names.}

\item{seed}{[\code{integer(1)}] Optional random seed for selection of colours in blender.}

\item{return_raw}{[\code{logical(1)}] Whether to return the raw static chart. Defaults to FALSE.}

\item{call}{Error call function, usually not needed.}
}
\value{
ggplot
}
\description{
Embed Interactive Categorical Plot
}
\examples{
\dontrun{
embed_cat_plot_pdf(data = ex_survey1, cols = b_1:b_3)
}
}
