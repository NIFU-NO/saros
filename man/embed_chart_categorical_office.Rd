% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chart_categorical_office.R
\name{embed_chart_categorical_office}
\alias{embed_chart_categorical_office}
\title{Create Word Report with Univariates for Categorical Columns Sharing Same Categories}
\usage{
embed_chart_categorical_office(
  data,
  cols = tidyselect::everything(),
  by = NULL,
  ...,
  showNA = c("ifany", "always", "no"),
  label_font_size = 8,
  main_font_size = 9,
  font_family = "Calibri",
  colour_palette = NULL,
  colour_na = "gray90",
  colour_2nd_binary_cat = "#ffffff",
  height_per_col = 0.3,
  height_fixed = 1,
  docx_template = NULL,
  chart_formatting = NULL,
  caption_style = NULL,
  caption_autonum = NULL,
  percentage = TRUE,
  digits = 1,
  percent_sign = TRUE,
  sort_by = NULL,
  vertical = FALSE,
  desc = FALSE,
  ignore_if_below = 1,
  label_separator = NULL,
  seed = 1,
  return_raw = FALSE
)
}
\arguments{
\item{data}{Data frame or tibble.}

\item{cols}{Columns to select for reporting. Supports \code{\link[dplyr:dplyr_tidy_select]{tidy-select}}.}

\item{by}{\code{\link[dplyr:dplyr_data_masking]{data-masking}}\cr. Optional column used to break output by.}

\item{...}{Optional parameters forwarded from above.}

\item{showNA}{[\code{logical(1)}]\cr Whether to show NA in categorical variables (one of c("ifany", "always", "no"), like in table()).}

\item{label_font_size}{[\code{integer(1)}]\cr Font size for data labels}

\item{main_font_size}{[\code{integer(1)}]\cr Font size for all other text
Must contain at least the number of unique values (excl. missing) in the data set.}

\item{font_family}{Word font family. See officer::fp_text}

\item{colour_palette}{[\code{character()}]\cr
Must contain at least the number of unique values (incl. missing) in the data set.}

\item{colour_na}{[\code{character(1)}]\cr Colour as a single string.}

\item{colour_2nd_binary_cat}{[\code{character(1)}]\cr Colour for second category in binary variables. Often useful to hide this.}

\item{height_per_col}{[\code{numeric(1)>0}]\cr Height in cm per chart entry.}

\item{height_fixed}{[\code{numeric(1)>0}]\cr Fixed height in cm.}

\item{docx_template}{[\code{character(1) || officer::read_docx()}]\cr
Either a filepath to a template file, or a rdocx-object from \link[officer]{read_docx}.}

\item{chart_formatting}{[\code{character(1)}]\cr Template style to be used for formatting chart}

\item{caption_style}{[\code{character(1)}]\cr Template style to be used for formatting chart. Defaults to "Normal".}

\item{caption_autonum}{Object obtained from \link[officer]{run_autonum}.}

\item{percentage}{[\code{logical(1)}]\cr Whether to compute percentage or frequency (default).}

\item{digits}{[\code{integer(1)}]\cr Number of decimal places as integer.}

\item{percent_sign}{[\code{logical(1)}]\cr Whether to include percentage symbol on chart.}

\item{sort_by}{[\code{character(1)}] Sort output (and collapse if requested). Defaults to none (NULL).
\itemize{
\item{".top"}{The percentage for the highest category available in the variable.}
\item{".upper"}{The sum of the percentages for the categories above the middle category.}
\item{".mid_upper"}{The sum of the percentages for the categories including and above the middle category.}
\item{".mid_lower"}{The sum of the percentages for the categories including and below the middle category.}
\item{".lower"}{The sum of the percentages for the categories below the middle category.}
\item{".bottom"}{The percentage for the lowest category available in the variable.}
\item{".variable_label"}{Sort by the variable labels.}
\item{".id"}{Sort by the variable names.}
\item{".by_group"}{The groups of the by argument.}
\item{[\code{character(1)}]}{Character vector of category labels to sum together.}
}}

\item{vertical}{[\code{logical(1)}] Logical. If FALSE (default), then horizontal.}

\item{desc}{[\code{logical(1)}]\cr Reverse sorting of sort_by. Defaults to ascending order (FALSE).}

\item{ignore_if_below}{[\code{numeric(1)}] Whether to hide label if below this value.}

\item{label_separator}{[\code{character(1)}]\cr Split pattern.}

\item{seed}{[\code{integer(1)}] Optional random seed for selection of colours in blender.}

\item{return_raw}{[\code{logical(1)}] Whether to return the raw static chart. Defaults to FALSE.}
}
\value{
rdocx object, which can be saved with print() after loading the officer-package
}
\description{
Create Word Report with Univariates for Categorical Columns Sharing Same Categories
}
\examples{
library(officer) # To save the rdocx object to disk
filepath <-
 ex_survey1 |>
 embed_chart_categorical_office(cols = a_1:a_9) |>
 print(target = "test_docx_a19.docx")
file.remove(filepath)


  docx_template <-
      system.file("template","NIFUmal_tom.docx",
                   package = "saros", mustWork = TRUE)
  colour_palette <-
    readxl::read_excel(system.file("template", "NIFUmal_stiler.xlsx",
                                   package = "saros", mustWork = TRUE),
                       sheet = "NIFUblue") |>
    dplyr::pull(hex)
chart_format <-
 system.file("template", "NIFUmal_stiler.xlsx",
             package = "saros", mustWork = TRUE) |>
 readxl::read_excel(sheet = 1) |>
 dplyr::filter(saros_style == "figure") |>
 dplyr::pull(template_style)

 test_docx_b13 <-
   ex_survey1 |>
   embed_chart_categorical_office(cols = b_1:b_3,
                       docx_template = docx_template,
                       colour_palette = colour_palette,
                       chart_formatting = chart_format,
                       height_per_col = .3,
                       height_fixed = 1)
#print(test_docx_b13, target = "test_docx_b13.docx")
#file.remove("test_docx_b13.docx")
}
